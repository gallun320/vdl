17.10 18:00:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 18:00:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 18:00:50 QUEUE: vdl.0 (thread) response core/server.query
17.10 18:00:50 TIME: core/server.query : 2.12 ms
17.10 18:00:50 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 18:00:50 QUEUE: vdl.0 (thread) response core/user.isOnlineID
17.10 18:00:50 TIME: core/user.isOnlineID : 0.07 ms
17.10 18:00:50 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 18:00:50 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 18:00:50 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
17.10 18:00:50 STATS: cache [user], database [330 calls, 0 reads, 0 writes]
17.10 18:00:50 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
17.10 18:00:50 READDB: SELECT * FROM Users WHERE ID = 36
17.10 18:00:50 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.46 ms]
17.10 18:00:50 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
17.10 18:00:50 QUEUE: vdl.0 (thread) response core/cache.get
17.10 18:00:50 TIME: core/cache.get : 3.63 ms
17.10 18:00:50 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 18:00:50 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 18:00:50 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
17.10 18:00:50 STATS: cache [questdata], database [330 calls, 0 reads, 0 writes]
17.10 18:00:50 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
17.10 18:00:50 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 18:00:50 QUEUE: vdl.0 (thread) response core/cache.get
17.10 18:00:50 TIME: core/cache.get : 1.61 ms
17.10 18:00:50 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 18:00:50 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 18:00:50 TIME: core/user.loginPost : 0.1 ms
17.10 18:00:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 18:00:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:00:55 TIME: core/cache.update : 0.11 ms
17.10 18:00:56 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 18:00:57 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
17.10 18:00:57 DB: SELECT * FROM tournament
17.10 18:00:57 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 18:00:57 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
17.10 18:00:57 STATS: cache [tournament], database [337 calls, 0 reads, 0 writes]
17.10 18:00:57 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
17.10 18:00:57 READDB: SELECT * FROM Tournament WHERE ID = 1
17.10 18:00:57 DB: SELECT name FROM users WHERE id = 36
17.10 18:00:57 DB: SELECT name FROM users WHERE id = 37
17.10 18:00:57 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.10 18:00:57 TIME: vdl/cache.tournament.getAvailableTournament : 3.52 ms
17.10 18:00:59 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
17.10 18:00:59 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
17.10 18:00:59 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.1 ms
17.10 18:00:59 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
17.10 18:00:59 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 18:00:59 TIME: vdl/cache.tournament.setGrid : 0.09 ms
17.10 18:01:10 BLOCKREMOVE: tournament 1 removed
17.10 18:01:20 TIMER: Clans cache...
17.10 18:01:20 TIMER: Clans cache: 0ms
17.10 18:01:20 TIMER: Check tournament...
17.10 18:01:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:01' AND status = 'starting'
17.10 18:01:20 TIMER: Check tournament: 0ms
17.10 18:01:24 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
17.10 18:01:24 READDB: SELECT * FROM Tournament WHERE ID = 1
17.10 18:01:24 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
17.10 18:01:24 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.83 ms
17.10 18:01:24 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
17.10 18:01:24 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 18:01:24 TIME: vdl/cache.tournament.setGrid : 0.11 ms
17.10 18:01:34 BLOCKREMOVE: tournament 1 removed
17.10 18:02:20 TIMER: Clans cache...
17.10 18:02:20 TIMER: Clans cache: 0ms
17.10 18:02:20 TIMER: Check tournament...
17.10 18:02:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:02' AND status = 'starting'
17.10 18:02:20 TIMER: Check tournament: 0ms
17.10 18:02:47 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 18:02:47 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 18:02:47 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 18:02:47 TIME: core/server.query : 1.49 ms
17.10 18:02:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:02:47 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 18:02:47 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
17.10 18:02:47 STATS: cache [battle], database [447 calls, 0 reads, 0 writes]
17.10 18:02:47 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.10 18:02:47 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 18:02:47 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 18:02:47 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 18:02:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 18:02:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 18:02:47 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 18:02:47 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
17.10 18:02:47 STATS: cache [user], database [447 calls, 1 reads, 1 writes]
17.10 18:02:47 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
17.10 18:02:47 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 2.49 ms]
17.10 18:02:47 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.39 ms]
17.10 18:02:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 18:02:47 TIME: core/cache.update : 1.09 ms
17.10 18:02:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 18:02:47 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 18:02:47 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
17.10 18:02:47 STATS: cache [questdata], database [447 calls, 1 reads, 0 writes]
17.10 18:02:47 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
17.10 18:02:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:02:47 TIME: core/cache.update : 0.59 ms
17.10 18:02:47 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 18:02:47 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 18:02:47 TIME: core/user.logoutPost : 0.18 ms
17.10 18:02:47 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 18:02:47 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 18:02:57 BLOCKREMOVE: user 36 removed
17.10 18:02:57 BLOCKREMOVE: questdata 36 removed
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:03' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:04' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:05' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:06' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:07' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:08' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:09' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:10' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:11' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:12' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:13' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:14' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:15' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:16' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:17' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:18' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:19' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:20' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:03:20 TIMER: Clans cache...
17.10 18:03:20 TIMER: Clans cache: 0ms
17.10 18:03:20 TIMER: Check tournament...
17.10 18:03:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:21' AND status = 'starting'
17.10 18:03:20 TIMER: Check tournament: 0ms
17.10 18:22:21 TIMER: Clans cache...
17.10 18:22:21 TIMER: Clans cache: 0ms
17.10 18:22:21 TIMER: Check tournament...
17.10 18:22:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:22' AND status = 'starting'
17.10 18:22:21 TIMER: Check tournament: 0ms
17.10 18:22:21 TIMER: Clans cache...
17.10 18:22:21 TIMER: Clans cache: 0ms
17.10 18:22:21 TIMER: Check tournament...
17.10 18:22:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:23' AND status = 'starting'
17.10 18:22:21 TIMER: Check tournament: 0ms
17.10 18:22:21 TIMER: Clans cache...
17.10 18:22:21 TIMER: Clans cache: 0ms
17.10 18:22:21 TIMER: Check tournament...
17.10 18:22:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:24' AND status = 'starting'
17.10 18:22:21 TIMER: Check tournament: 0ms
17.10 18:24:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 18:24:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 18:24:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 18:24:53 TIME: core/server.query : 1.58 ms
17.10 18:24:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 18:24:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 18:24:53 TIME: core/user.isOnlineID : 0.09 ms
17.10 18:24:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 18:24:53 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 18:24:53 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
17.10 18:24:53 STATS: cache [user], database [1773 calls, 1 reads, 2 writes]
17.10 18:24:53 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
17.10 18:24:53 READDB: SELECT * FROM Users WHERE ID = 36
17.10 18:24:53 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.14 ms]
17.10 18:24:53 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.4 ms]
17.10 18:24:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 18:24:53 TIME: core/cache.get : 1.77 ms
17.10 18:24:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 18:24:53 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 18:24:53 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
17.10 18:24:53 STATS: cache [questdata], database [1773 calls, 1 reads, 1 writes]
17.10 18:24:53 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
17.10 18:24:53 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 18:24:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 18:24:53 TIME: core/cache.get : 0.88 ms
17.10 18:24:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 18:24:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 18:24:53 TIME: core/user.loginPost : 0.08 ms
17.10 18:25:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 18:25:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:25:01 TIME: core/cache.update : 0.11 ms
17.10 18:25:01 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 18:25:21 TIMER: Clans cache...
17.10 18:25:21 TIMER: Clans cache: 0ms
17.10 18:25:21 TIMER: Check tournament...
17.10 18:25:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:25' AND status = 'starting'
17.10 18:25:21 TIMER: Check tournament: 0ms
17.10 18:25:21 TIMER: Clans cache...
17.10 18:25:21 TIMER: Clans cache: 0ms
17.10 18:25:21 TIMER: Check tournament...
17.10 18:25:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:26' AND status = 'starting'
17.10 18:25:21 TIMER: Check tournament: 0ms
17.10 18:25:21 TIMER: Clans cache...
17.10 18:25:21 TIMER: Clans cache: 0ms
17.10 18:25:21 TIMER: Check tournament...
17.10 18:25:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:27' AND status = 'starting'
17.10 18:25:21 TIMER: Check tournament: 0ms
17.10 18:28:04 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 18:28:04 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 18:28:04 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 18:28:04 TIME: core/server.query : 1.36 ms
17.10 18:28:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:28:04 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
17.10 18:28:04 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
17.10 18:28:04 STATS: cache [battle], database [1964 calls, 1 reads, 0 writes]
17.10 18:28:04 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.10 18:28:04 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 18:28:04 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 18:28:04 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 18:28:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 18:28:04 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 18:28:04 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 18:28:04 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
17.10 18:28:04 STATS: cache [user], database [1964 calls, 2 reads, 3 writes]
17.10 18:28:04 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
17.10 18:28:04 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.79 ms]
17.10 18:28:04 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.29 ms]
17.10 18:28:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 18:28:04 TIME: core/cache.update : 0.35 ms
17.10 18:28:04 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 18:28:04 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 18:28:04 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
17.10 18:28:04 STATS: cache [questdata], database [1964 calls, 2 reads, 1 writes]
17.10 18:28:04 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
17.10 18:28:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:28:04 TIME: core/cache.update : 0.28 ms
17.10 18:28:04 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 18:28:04 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 18:28:04 TIME: core/user.logoutPost : 0.06 ms
17.10 18:28:05 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 18:28:05 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 18:28:13 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 18:28:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 18:28:13 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 18:28:13 TIME: core/server.query : 1.11 ms
17.10 18:28:13 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 18:28:13 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 18:28:13 TIME: core/user.isOnlineID : 0.05 ms
17.10 18:28:13 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 18:28:13 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 2, id => 36 } }
17.10 18:28:13 TIME: core/cache.get : 0.25 ms
17.10 18:28:13 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 18:28:13 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 36 } }
17.10 18:28:13 TIME: core/cache.get : 0.14 ms
17.10 18:28:13 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 18:28:13 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 18:28:13 TIME: core/user.loginPost : 0.08 ms
17.10 18:28:21 TIMER: Clans cache...
17.10 18:28:21 TIMER: Clans cache: 0ms
17.10 18:28:21 TIMER: Check tournament...
17.10 18:28:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:28' AND status = 'starting'
17.10 18:28:21 TIMER: Check tournament: 0ms
17.10 18:28:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 18:28:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
17.10 18:28:21 TIME: core/cache.update : 0.14 ms
17.10 18:28:21 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 18:28:55 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 18:28:55 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 18:28:55 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 18:28:55 TIME: core/server.query : 1.83 ms
17.10 18:28:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:28:55 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 18:28:55 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 18:28:55 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 18:28:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 18:28:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 18:28:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
17.10 18:28:55 TIME: core/cache.update : 0.16 ms
17.10 18:28:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 18:28:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 18:28:55 TIME: core/cache.update : 0.16 ms
17.10 18:28:55 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 18:28:55 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 18:28:55 TIME: core/user.logoutPost : 0.23 ms
17.10 18:28:56 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 18:28:56 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 18:29:06 BLOCKREMOVE: user 36 removed
17.10 18:29:06 BLOCKREMOVE: questdata 36 removed
17.10 18:29:21 TIMER: Clans cache...
17.10 18:29:21 TIMER: Clans cache: 0ms
17.10 18:29:21 TIMER: Check tournament...
17.10 18:29:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:29' AND status = 'starting'
17.10 18:29:21 TIMER: Check tournament: 0ms
17.10 18:29:21 TIMER: Clans cache...
17.10 18:29:21 TIMER: Clans cache: 0ms
17.10 18:29:21 TIMER: Check tournament...
17.10 18:29:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:30' AND status = 'starting'
17.10 18:29:21 TIMER: Check tournament: 0ms
17.10 18:29:21 TIMER: Clans cache...
17.10 18:29:21 TIMER: Clans cache: 0ms
17.10 18:29:21 TIMER: Check tournament...
17.10 18:29:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:31' AND status = 'starting'
17.10 18:29:21 TIMER: Check tournament: 0ms
17.10 18:32:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 18:32:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 18:32:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 18:32:11 TIME: core/server.query : 0.99 ms
17.10 18:32:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 18:32:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 18:32:11 TIME: core/user.isOnlineID : 0.07 ms
17.10 18:32:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 18:32:11 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 18:32:11 STATS: cache [user], segments [16 calls, 11 hits, 4 misses]
17.10 18:32:11 STATS: cache [user], database [2211 calls, 2 reads, 6 writes]
17.10 18:32:11 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
17.10 18:32:11 READDB: SELECT * FROM Users WHERE ID = 36
17.10 18:32:11 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.2 ms]
17.10 18:32:11 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.2 ms]
17.10 18:32:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 18:32:11 TIME: core/cache.get : 1.45 ms
17.10 18:32:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 18:32:11 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 18:32:11 STATS: cache [questdata], segments [13 calls, 8 hits, 4 misses]
17.10 18:32:11 STATS: cache [questdata], database [2211 calls, 2 reads, 3 writes]
17.10 18:32:11 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
17.10 18:32:11 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 18:32:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 18:32:11 TIME: core/cache.get : 0.96 ms
17.10 18:32:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 18:32:11 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 18:32:11 TIME: core/user.loginPost : 0.08 ms
17.10 18:32:21 TIMER: Clans cache...
17.10 18:32:21 TIMER: Clans cache: 0ms
17.10 18:32:21 TIMER: Check tournament...
17.10 18:32:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:32' AND status = 'starting'
17.10 18:32:21 TIMER: Check tournament: 0ms
17.10 18:32:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 18:32:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:32:21 TIME: core/cache.update : 0.09 ms
17.10 18:32:21 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 18:32:21 TIMER: Clans cache...
17.10 18:32:21 TIMER: Clans cache: 0ms
17.10 18:32:21 TIMER: Check tournament...
17.10 18:32:21 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:33' AND status = 'starting'
17.10 18:32:21 TIMER: Check tournament: 0ms
17.10 18:33:36 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 18:33:36 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 18:33:36 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 18:33:36 TIME: core/server.query : 1.24 ms
17.10 18:33:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:33:36 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 3 not found]
17.10 18:33:36 STATS: cache [battle], segments [4 calls, 0 hits, 3 misses]
17.10 18:33:36 STATS: cache [battle], database [2295 calls, 3 reads, 0 writes]
17.10 18:33:36 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.10 18:33:36 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 18:33:36 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 18:33:36 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 18:33:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 18:33:36 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 18:33:36 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
17.10 18:33:36 STATS: cache [user], segments [19 calls, 12 hits, 6 misses]
17.10 18:33:36 STATS: cache [user], database [2295 calls, 3 reads, 7 writes]
17.10 18:33:36 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
17.10 18:33:36 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.15 ms]
17.10 18:33:36 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.18 ms]
17.10 18:33:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 18:33:36 TIME: core/cache.update : 0.36 ms
17.10 18:33:36 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 18:33:36 STATS: cache [questdata], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
17.10 18:33:36 STATS: cache [questdata], segments [15 calls, 8 hits, 6 misses]
17.10 18:33:36 STATS: cache [questdata], database [2295 calls, 3 reads, 3 writes]
17.10 18:33:36 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
17.10 18:33:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:33:36 TIME: core/cache.update : 0.25 ms
17.10 18:33:36 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 18:33:36 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 18:33:36 TIME: core/user.logoutPost : 0.08 ms
17.10 18:33:36 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 18:33:36 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 18:33:46 BLOCKREMOVE: user 36 removed
17.10 18:33:46 BLOCKREMOVE: questdata 36 removed
